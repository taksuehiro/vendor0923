warning: in the working copy of 'frontend/src/lib/fetcher.ts', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/frontend/src/lib/fetcher.ts b/frontend/src/lib/fetcher.ts[m
[1mindex 225eddd..f229bbb 100644[m
[1m--- a/frontend/src/lib/fetcher.ts[m
[1m+++ b/frontend/src/lib/fetcher.ts[m
[36m@@ -35,18 +35,44 @@[m [mexport interface SearchResponse {[m
 }[m
 [m
 export async function searchVendors(request: SearchRequest): Promise<SearchResponse> {[m
[31m-  const baseUrl = process.env.NEXT_PUBLIC_API_BASE || 'http://localhost:8000';[m
[32m+[m[32m  const baseUrl = process.env.NEXT_PUBLIC_API_BASE || 'http://localhost:8080';[m
   [m
   try {[m
[31m-    const response = await fetchJson<SearchResponse>(`${baseUrl}/search`, {[m
[32m+[m[32m    const response = await fetch(`${baseUrl}/search`, {[m
       method: "POST",[m
       headers: {[m
         "Content-Type": "application/json",[m
       },[m
[32m+[m[32m      credentials: "omit",[m
       body: JSON.stringify(request),[m
     });[m
     [m
[31m-    return response;[m
[32m+[m[32m    // レスポンスの存在確認[m
[32m+[m[32m    if (!response) {[m
[32m+[m[32m      throw new Error('レスポンスが取得できませんでした');[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // HTTPステータスコードの確認[m
[32m+[m[32m    if (!response.ok) {[m
[32m+[m[32m      const errorText = await response.text().catch(() => '');[m
[32m+[m[32m      throw new Error(`HTTP ${response.status}: ${errorText || response.statusText}`);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    const json = await response.json();[m
[32m+[m[41m    [m
[32m+[m[32m    // 防御的パース: json.hits または json.data.hits のどちらでも動く[m
[32m+[m[32m    const hits = Array.isArray(json?.hits)[m
[32m+[m[32m      ? json.hits[m
[32m+[m[32m      : Array.isArray(json?.data?.hits)[m
[32m+[m[32m        ? json.data.hits[m
[32m+[m[32m        : [];[m
[32m+[m[41m    [m
[32m+[m[32m    // 最終的な配列の検証[m
[32m+[m[32m    if (!Array.isArray(hits)) {[m
[32m+[m[32m      throw new Error("Unexpected response shape");[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    return { hits };[m
   } catch (error) {[m
     console.error("Search API error:", error);[m
     throw new Error(`検索API呼び出しに失敗しました: ${error instanceof Error ? error.message : 'Unknown error'}`);[m
